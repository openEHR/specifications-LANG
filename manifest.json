{
    "id": "LANG",
    "title": "Generic Languages",
    "description": "openEHR Languages Component",
    "keywords": "language models, lang component, openehr",
    "specifications": [
        {
            "id": "odin",
            "title": "Object Data Instance Notation (ODIN)",
            "title_short": "ODIN",
            "description": "Object Data Instance Notation (ODIN) specification",
            "summary": "This is the JSON-like notation used to express various sections of ADL archetypes including description, terminology and annotations, and also BMM files.",
            "micro_summary": "Object Data Instance Notation",
            "copyright_year": "2003",
            "spec_status": "STABLE",
            "keywords": "data, notation, JSON, syntax"
        },
        {
            "id": "bmm",
            "title": "Basic Meta-Model (BMM)",
            "title_short": "BMM",
            "description": "Basic Meta-Model (BMM) specification",
            "summary": "BMM provides a human- and machine-readable / writable format for defining object models. It can be considered a much more compact and readable alternative to XMI.",
            "micro_summary": "Basic Meta-Model of models & expressions",
            "classes": [
                "BMM_SCHEMA",
                "BMM_MODEL",
                "BMM_CLASS",
                "BMM_TYPE",
                "BMM_PROPERTY"
            ],
            "copyright_year": "2016",
            "spec_status": "DEVELOPMENT",
            "keywords": "reflection, meta-model, UML, BMM"
        },
        {
            "id": "bmm_persistence",
            "title": "BMM Persistence Model and Syntax",
            "title_short": "P_BMM",
            "description": "BMM Persistence Model and Syntax",
            "summary": "A human-readable and machine-processable save format for BMM.",
            "micro_summary": "BMM human-readable serial format",
            "classes": [
                "P_BMM_SCHEMA",
                "P_BMM_CLASS",
                "P_BMM_TYPE",
                "P_BMM_PROPERTY"
            ],
            "copyright_year": "2016",
            "spec_status": "STABLE",
            "keywords": "reflection, meta-model, UML"
        },
        {
            "id": "basic_expression_language",
            "title": "Basic Expression Language (BEL)",
            "title_short": "Basic Expression Language",
            "description": "openEHR Basic Expression Language specification",
            "summary": "The openEHR Basic Expression Language defines a basic model and syntax for specifying expressions and statements for use in archetype rules.",
            "micro_summary": "A basic formal syntax for expressions",
            "copyright_year": "2016",
            "spec_status": "STATUS",
            "keywords": "openehr, expressions, rules"
        },
        {
            "id": "expression_language",
            "title": "Expression Language (EL)",
            "title_short": "Expression Language",
            "description": "openEHR Expression Language specification",
            "summary": "The openEHR Expression Language defines an advanced object / functional syntax for specifying expressions for use elsewhere in openEHR, e.g. Task Planning, guidelines, rules etc.",
            "micro_summary": "A syntax for formal expressions based on BMM",
            "copyright_year": "2020",
            "spec_status": "DEVELOPMENT",
            "keywords": "openehr, expressions, rules"
        }
    ],
    "expressions": [
        {
            "id": "openEHR_UML-LANG.mdzip",
            "type": "uml",
            "title": "LANG UML",
            "description": "UML file for openEHR Language model classes, as MagicDraw 18.5. Contains UML 2.5 standard XMI file."
        }
    ],
    "jira": {
        "open_issues": "11116",
        "roadmap": "SPECLANG"
    },
    "releases": [
        {
            "id": "1.0.0",
            "date": "2020-05-11",
            "jira": {
                "crs": "SPECLANG/versions/12518",
                "prs": "SPECPR/versions/12519"
            }
        }
    ]
}
